@page
@using Microsoft.AspNetCore.Identity
@using static FishingTrip.Pages.Shared._Common;
@using FishingTrip.Pages.Shared;
@model IndexModel
@inject SignInManager<IdentityUser> SignInManager;

@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<body onload="indexLoad()">
    <div class="text-center">
        <h1 class="display-4">FishingTrip</h1>
        <h2>For planning and tracking all of you fishing trips</h2>

        @*    Ideas as follows:
        Weather forecast for favourite spots
        See recent posts/fishing trips of friends and self*@

        @if (SignInManager.IsSignedIn(User))
        {
            string[] week = nextDays(7);
            //remove_Favourite("Test");
            <h1>Recent Posts and fishing trips from friends</h1>
            <p>
                Creating a method to collect a certain number of posts from the database from friends and own user
                This could be harder to do because of the multiple database
                Use a combine function to add them all together?
            </p>
            <p>Insert recent friend posts here</p>
            //Find method to be able to find friends and then add there most recent posts similar to the old PHP style site

            <h1>Favourite fishing locations - Quick view</h1>
            <label>This weeks conditions at your favourite fishing spots</label>
            <form id="checkDays" action="~/" method="post">
                <label>Days to compare: </label>
                <ul class="favSpotList">
                    @{
                        //string[] week = nextDays(7);
                        for (int i = 0; i <week.Length; i++)
                        {
                            if (week[i] != "")
                            {
                                            <label>@week[i]:</label>
                                if (i <3)
                                {
                                                <input type="checkbox" name="dayChk" onclick="indexLoad()" value=@week[i] checked />
                                }
                                else
                                {
                                                <input type="checkbox" name="dayChk" onclick="indexLoad()" value=@week[i] />
                                }
                            }
                        }
                    }
                </ul>
            </form>
            <form id="checkSpot" action="~/" method="post">
                <ul class="favSpotList">
                    @{
                        // this may need to change from a list. What I am aiming to do is have the conditions shown for the users favourite spots for easy comparison. This will require a loading animation while the server recieves and redirects the fishing spots forecast. This information is all passed with a JSON file for each day, for each spot, perhaps should limit to 3 spots initially.
                        string[] favSpots = getFavSpots(User.Claims.ElementAtOrDefault(0).Value);
                        foreach (string spot in favSpots)
                        {
                            if (spot != "")
                            {
                                //string[] checkedDays = getCheckedDays();
                                <li name=@spot.Replace(" ","_")>
                                    <h2>@spot</h2>
                                    <div name="dayForecastDetails">
                                        @{
                                            Dictionary<string, Hour[]> dataSF = getFavConditions("SF", spot, week);
                                            Dictionary<string, Hour[]> dataT4F = getFavConditions("T4F", spot, week);
                                            if (dataSF.Keys.First() != "Not Found")
                                            {
                                                foreach (KeyValuePair<string, Hour[]> dayInfo in dataSF)
                                                {
                                                    if (dayInfo.Key != "Not Found")
                                                    {
                                                        <div name="forecastDiv" class="forecastDiv" style="display:none" id="@dayInfo.Key">
                                                            @{
                                                                ForecastFormat forecastDiv = new ForecastFormat(dayInfo);

                                                                <h2 style="display: inline-block;"> @dayInfo.Key : </h2>
                                                                <label>
                                                                    Low tides: @forecastDiv.lowTides
                                                                </label>
                                                                <label>
                                                                    , High tides: @forecastDiv.highTides
                                                                </label>
                                                                <label>
                                                                    , Sea Temperature: @forecastDiv.waterTemp
                                                                </label>
                                                                <table class="forecastTable">
                                                                    <tr>
                                                                        <th></th>
                                                                        @foreach (string time in ForecastFormat.displayTimes)
                                                                        {
                                                                            <th>@time</th>
                                                                        }
                                                                    </tr>
                                                                    @foreach (string s in forecastDiv.waveInfo)
                                                                    {
                                                                        <td>@s</td>
                                                                    }
                                                                </table>
                                                            }
                                                        </div>
                                                    }
                                                }
                                            }
                                            else if (dataT4F.Keys.First() != "Not Found")
                                            {
                                                foreach (KeyValuePair<string, Hour[]> dayInfo in dataT4F)
                                                {
                                                    if (dayInfo.Key != "Not Found")
                                                    {
                                                        <div name="forecastDiv" class="forecastDiv" style="display:none" id="@dayInfo.Key">
                                                            @{
                                                                ForecastFormat forecastDiv = new ForecastFormat(dayInfo);

                                                                <h2 style="display: inline-block;"> @dayInfo.Key : </h2>
                                                                <label>
                                                                    Low tides: @forecastDiv.lowTides
                                                                </label>
                                                                <label>
                                                                    , High tides: @forecastDiv.highTides
                                                                </label>
                                                                <label>
                                                                    , Sea Temperature: @forecastDiv.waterTemp
                                                                </label>
                                                                <table class="forecastTable">
                                                                    <tr>
                                                                        <th></th>
                                                                        @foreach (string time in ForecastFormat.displayTimes)
                                                                        {
                                                                            <th>@time</th>
                                                                        }
                                                                    </tr>
                                                                    @foreach (string s in forecastDiv.waveInfo)
                                                                    {
                                                                        <td>@s</td>
                                                                    }
                                                                </table>
                                                            }
                                                        </div>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <div id=@(spot.Replace(" ","_")+"_Info") class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                                            }
                                        }
                                    </div>
                                </li>
                            }
                        }
                    }
                </ul>
            </form>

            <form id="addFav" action="~/" method="post">
                <label>Add favourite fishing spot</label>
                <input type="text" name="favSpot" width="50" value="" />
                <input type="hidden" name="addFavourite" value="true" />
                <input type="submit" value="Add favourite" />
            </form>
            <form id="rmvFav" action="~/" method="post">
                <label>Remove a favourite fishing spot</label>
                <input type="text" name="rmvSpot" width="50" value="" />
                <input type="hidden" name="rmvFavourite" value="true" />
                <input type="submit" value="Remove favourite" />
            </form>

        }
        else
        {
            <h2>For tracking all of your fishing data</h2>

            <br></br>
            <h3>What this application is capable of:</h3>
            <ul>
                <li class="list">Returns weather and wave information for you favourite fishing locations</li>
                <li class="list">Recommends best fishing days for you based on fishing history</li>
                <li class="list">Records your fishing trips for you and the conditions</li>
            </ul>
        }
    </div>

</body>

</html>

